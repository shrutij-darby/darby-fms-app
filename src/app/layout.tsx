import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// This component is used to suppress hydration warnings
function SuppressHydrationWarning({ children }: { children: React.ReactNode }) {
  return <div suppressHydrationWarning>{children}</div>;
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" suppressHydrationWarning>
      <head>
        {/* Add a script to remove the cz-shortcut-listen attribute */}
        <script
          dangerouslySetInnerHTML={{
            __html: `
              // This script runs before hydration to remove the cz-shortcut-listen attribute
              // that's added by some browser extensions
              document.addEventListener('DOMContentLoaded', () => {
                if (document.body) {
                  document.body.removeAttribute('cz-shortcut-listen');
                }
              });
            `,
          }}
        />
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        suppressHydrationWarning
      >
        <SuppressHydrationWarning>
          {children}
        </SuppressHydrationWarning>
      </body>
    </html>
  );
}
